{"ast":null,"code":"var _jsxFileName = \"/Users/chukhanhhh/TMA/src/containers/Identity/Register/Register.jsx\";\nimport React, { Component } from \"react\";\nimport { FormCheckBox, FormInput, FormSelect } from \"../../../components/form/form\";\nimport ReactDOM from \"react-dom\";\nimport style from \"./Register.module.scss\";\nimport RegisterSVG from \"../../img/register.svg\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeMail = e => {\n      this.setState({\n        mail: e.target.value\n      });\n    };\n\n    this.onChangePassword = e => this.setState({\n      password: e.target.value\n    });\n\n    this.onChangeConfirmPassword = e => this.setState({\n      confirmPassword: e.target.value\n    });\n\n    this.state = {\n      mail: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      acceptedTerms: false,\n      // added for our checkbox\n      clientType: \"\"\n    };\n    this.onChangeMail = this.onChangeMail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.registerIdentity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.register,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.registerForm,\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: this.state,\n            validationSchema: Yup.object({\n              email: Yup.string().email(\"Invalid email addresss`\").required(\"Required\"),\n              password: Yup.string().min(8, \"Minimum 8 characters\").required(\"Required!\"),\n              confirmPassword: Yup.string().required(\"Required!\").min(8, \"Minimum 8 characters\").when(\"password\", {\n                is: val => val && val.length > 0 ? true : false,\n                then: Yup.string().oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n              }),\n              acceptedTerms: Yup.boolean().required(\"Required\").oneOf([true], \"You must accept the terms and conditions.\"),\n              clientType: Yup.string() // specify the set of valid values for job type\n              // @see http://bit.ly/yup-mixed-oneOf\n              .oneOf([\"Client\", \"Seller\"], \"Invalid Client Type\").required(\"Required\")\n            }),\n            onSubmit: async (values, {\n              setSubmitting\n            }) => {\n              await new Promise(r => setTimeout(r, 500));\n              console.log(values);\n              setSubmitting(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(FormInput, {\n                label: \"Email Address\",\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"TMA@formik.com\",\n                onChange: this.onChangeMail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                label: \"Password\",\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"Your Password\",\n                onChange: this.onChangePassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                label: \"Confirm Password\",\n                name: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Your Confirm Password\",\n                onChange: this.onChangeConfirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                label: \"Client Type\",\n                name: \"clientType\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select A Client Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Client\",\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Seller\",\n                  children: \"Seller\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormCheckBox, {\n                name: \"acceptedTerms\",\n                children: \"I accept the terms and conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.btnSignUP,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"RESIGTER\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.registerBackground,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.title,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"One of Us ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign out of Past.. Login to the new!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.btnSignIn,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"./login\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"SIGN IN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.footer,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: RegisterSVG,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/chukhanhhh/TMA/src/containers/Identity/Register/Register.jsx"],"names":["React","Component","FormCheckBox","FormInput","FormSelect","ReactDOM","style","Yup","Formik","Form","Link","Register","constructor","props","onChangeMail","e","setState","mail","target","value","onChangePassword","password","onChangeConfirmPassword","confirmPassword","state","acceptedTerms","clientType","bind","render","registerIdentity","register","registerForm","object","email","string","required","min","when","is","val","length","then","oneOf","ref","boolean","values","setSubmitting","Promise","r","setTimeout","console","log","btnSignUP","registerBackground","title","btnSignIn","footer","RegisterSVG"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  FormCheckBox,\n  FormInput,\n  FormSelect,\n} from \"../../../components/form/form\";\nimport ReactDOM from \"react-dom\";\nimport style from \"./Register.module.scss\";\nimport RegisterSVG from \"../../img/register.svg\";\nimport * as Yup from \"yup\";\nimport { Formik, Form} from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            mail: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            acceptedTerms: false, // added for our checkbox\n            clientType: \"\",  \n        }\n\n        this.onChangeMail = this.onChangeMail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n    }\n\n    onChangeMail = e => {\n        this.setState({mail: e.target.value});\n    }\n    onChangePassword = e => this.setState({password: e.target.value})\n    onChangeConfirmPassword = e => this.setState({confirmPassword: e.target.value})\n\n  render() {\n    return (\n      <div className={style.registerIdentity}>\n        <div className={style.register}>\n          <h1>SIGN UP</h1>\n          <div className={style.registerForm}>\n            <Formik\n              initialValues={this.state}\n              validationSchema={Yup.object({\n                email: Yup.string()\n                  .email(\"Invalid email addresss`\")\n                  .required(\"Required\"),\n                password: Yup.string()\n                  .min(8, \"Minimum 8 characters\")\n                  .required(\"Required!\"),\n                confirmPassword: Yup.string()\n                  .required(\"Required!\")\n                  .min(8, \"Minimum 8 characters\")\n                  .when(\"password\", {\n                    is: (val) => (val && val.length > 0 ? true : false),\n                    then: Yup.string()\n                      .oneOf(\n                        [Yup.ref(\"password\")],\n                        \"Both password need to be the same\"\n                      )\n                  }),\n                acceptedTerms: Yup.boolean()\n                  .required(\"Required\")\n                  .oneOf([true], \"You must accept the terms and conditions.\"),\n                clientType: Yup.string()\n                  // specify the set of valid values for job type\n                  // @see http://bit.ly/yup-mixed-oneOf\n                  .oneOf([\"Client\", \"Seller\"], \"Invalid Client Type\")\n                  .required(\"Required\"),\n              })}\n              onSubmit={async (values, { setSubmitting }) => {\n                await new Promise((r) => setTimeout(r, 500));\n                console.log(values);\n                setSubmitting(false);\n              }}\n            >\n              <Form>\n                <FormInput\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"TMA@formik.com\"\n                  onChange={this.onChangeMail}\n                />\n                <FormInput\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Your Password\"\n                  onChange={this.onChangePassword}\n                />\n                <FormInput\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  placeholder=\"Your Confirm Password\"\n                  onChange={this.onChangeConfirmPassword}\n                />\n                <FormSelect label=\"Client Type\" name=\"clientType\">\n                  <option value=\"\">Select A Client Type</option>\n                  <option value=\"Client\">Client</option>\n                  <option value=\"Seller\">Seller</option>\n                </FormSelect>\n                <FormCheckBox name=\"acceptedTerms\">\n                  I accept the terms and conditions\n                </FormCheckBox>\n                <div className={style.btnSignUP}>\n                  <button type=\"submit\">RESIGTER</button>\n                </div>\n              </Form>\n            </Formik>\n          </div>\n        </div>\n        <div className={style.registerBackground}>\n          <div className={style.title}>\n            <h1>One of Us ?</h1>\n            <h2>Sign out of Past.. Login to the new!</h2>\n            <div className={style.btnSignIn}>\n              <Link to=\"./login\">\n                <button>SIGN IN</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className={style.footer}>\n          <img src={RegisterSVG} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}