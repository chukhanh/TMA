{"ast":null,"code":"var _jsxFileName = \"/Users/chukhanhhh/TMA/src/components/form/form.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { StyledSelect, StyledErrorMessage, StyledLabel } from './form.style.jsx';\nimport style from './form.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.formInput,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: style.textInput,\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.error,\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = FormInput;\nexport const FormCheckBox = ({\n  children,\n  ...props\n}) => {\n  _s2();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [field, meta] = useField({ ...props,\n    type: \"checkbox\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.formCheckBox,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.checkBox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...field,\n        ...props,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.error,\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(FormCheckBox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = FormCheckBox;\nexport const FormSelect = ({\n  label,\n  ...props\n}) => {\n  _s3();\n\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelect, { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(StyledErrorMessage, {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s3(FormSelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c3 = FormSelect;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormInput\");\n$RefreshReg$(_c2, \"FormCheckBox\");\n$RefreshReg$(_c3, \"FormSelect\");","map":{"version":3,"sources":["/Users/chukhanhhh/TMA/src/components/form/form.jsx"],"names":["React","useField","StyledSelect","StyledErrorMessage","StyledLabel","style","FormInput","label","props","field","meta","formInput","id","name","textInput","touched","error","FormCheckBox","children","type","formCheckBox","checkBox","FormSelect"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,SAAQC,YAAR,EAAsBC,kBAAtB,EAA0CC,WAA1C,QAA4D,kBAA5D;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC9C;AACA,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAACO,KAAD,CAA9B;AACA,sBACI;AAAK,IAAA,SAAS,EAAEH,KAAK,CAACM,SAAtB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEH,KAAK,CAACI,EAAN,IAAYJ,KAAK,CAACK,IAAlC;AAAA,gBAAyCN;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAEF,KAAK,CAACS,SAAxB;AAAA,SAAuCL,KAAvC;AAAA,SAAkDD;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGE,IAAI,CAACK,OAAL,IAAgBL,IAAI,CAACM,KAArB,gBACC;AAAK,MAAA,SAAS,EAAEX,KAAK,CAACW,KAAtB;AAAA,gBAA8BN,IAAI,CAACM;AAAnC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IALN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZM;;GAAMV,S;UAEaL,Q;;;KAFbK,S;AAcb,OAAO,MAAMW,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGV;AAAf,CAAD,KAA4B;AAAA;;AACpD;AACA,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAAC,EAAE,GAAGO,KAAL;AAAYW,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAA9B;AACA,sBACE;AAAK,IAAA,SAAS,EAAEd,KAAK,CAACe,YAAtB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAEf,KAAK,CAACgB,QAAxB;AAAA,8BACE,sBAAWZ,KAAX;AAAA,WAAsBD,KAAtB;AAA6B,QAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGU,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGR,IAAI,CAACK,OAAL,IAAgBL,IAAI,CAACM,KAArB,gBACC;AAAK,MAAA,SAAS,EAAEX,KAAK,CAACW,KAAtB;AAAA,gBAA8BN,IAAI,CAACM;AAAnC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdI;;IAAMC,Y;UAEahB,Q;;;MAFbgB,Y;AAgBb,OAAO,MAAMK,UAAU,GAAG,CAAC;AAAEf,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC/C;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAACO,KAAD,CAA9B;AACA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEA,KAAK,CAACI,EAAN,IAAYJ,KAAK,CAACK,IAAxC;AAAA,gBAA+CN;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD,OAAkBE,KAAlB;AAAA,SAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGE,IAAI,CAACK,OAAL,IAAgBL,IAAI,CAACM,KAArB,gBACC,QAAC,kBAAD;AAAA,gBAAqBN,IAAI,CAACM;AAA1B;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IALN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAdI;;IAAMM,U;UAIarB,Q;;;MAJbqB,U","sourcesContent":["import React from \"react\";\nimport {useField} from \"formik\";\nimport {StyledSelect, StyledErrorMessage, StyledLabel} from './form.style.jsx';\nimport style from './form.module.scss';\n\nexport const FormInput = ({ label, ...props }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [field, meta] = useField(props);\n    return (\n        <div className={style.formInput}>\n          <label htmlFor={props.id || props.name}>{label}</label>\n          <input className={style.textInput} {...field} {...props} />\n          {meta.touched && meta.error ? (\n            <div className={style.error}>{meta.error}</div>\n          ) : null}\n        </div>\n      );\n}\n\nexport const FormCheckBox = ({ children, ...props }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [field, meta] = useField({ ...props, type: \"checkbox\" });\n    return (\n      <div className={style.formCheckBox}>\n        <label className={style.checkBox}>\n          <input {...field} {...props} type=\"checkbox\" />\n          {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className={style.error}>{meta.error}</div>\n        ) : null}\n      </div>\n    );\n  };\n\nexport const FormSelect = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [field, meta] = useField(props);\n    return (\n      <div>\n        <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n        <StyledSelect {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <StyledErrorMessage>{meta.error}</StyledErrorMessage>\n        ) : null}\n      </div>\n    );\n  };\n\n"]},"metadata":{},"sourceType":"module"}