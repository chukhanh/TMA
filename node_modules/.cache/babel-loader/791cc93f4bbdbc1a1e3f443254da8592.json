{"ast":null,"code":"var _jsxFileName = \"/Users/chukhanhhh/TMA/src/containers/Identity/Login/Login.jsx\";\n\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { Component } from \"react\";\nimport { FormInput } from \"../../../components/form/form\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { checkObject } from \"../../../utils/object\";\nimport \"antd/dist/antd.css\";\nimport style from \"./Login.module.scss\";\nimport log from \"../../img/log.svg\";\nimport * as Yup from \"yup\";\nimport { success, error } from \"../../../utils/messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        email: \"\",\n        password: \"\"\n      },\n      check: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.loginIdentity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loginLeft,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.title,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Here ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign out of Past.. Login to the new!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.btnSignUp,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"./register\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"SIGN UP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.footer,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: log,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loginRight,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.LoginForm,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.LoginFormik,\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: this.state.form,\n              validationSchema: Yup.object({\n                email: Yup.string().required(\"Required\"),\n                password: Yup.string().min(8, \"Minimum 8 characters\").required(\"Required!\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n              }),\n              validate: values => {\n                const EmailValidator = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n                let error = {}; // if(values.email.length === 0) error.email = \"Required\";\n                // if (checkObject(values, user) === false)\n                //   error.email = \"The email doesn't exist\";\n\n                if (!EmailValidator.test(values.email)) error.email = \"Invalid email address.\";\n                return error;\n              },\n              onSubmit: async (values, {\n                setSubmitting\n              }) => {\n                setSubmitting(true);\n                this.setState({\n                  form: {\n                    email: \"\",\n                    password: \"\"\n                  },\n                  check: checkObject(values, this.props.data)\n                }); // console.log(this.validat e(values.error.email));\n              },\n              children: ({\n                values\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(FormInput, {\n                  label: \"Email Address\",\n                  name: \"email\",\n                  type: \"email\",\n                  placeholder: \"TMA@formik.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  label: \"Password\",\n                  name: \"password\",\n                  type: \"password\",\n                  placeholder: \"Your Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.btnLogin,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    onClick: this.state.check === true ? error : success(values.email),\n                    children: checkObject(values, this.props.data) === true ? /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/category\",\n                      style: {\n                        color: \"#fff\"\n                      },\n                      children: \"LOGIN\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \" LOGIN\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/chukhanhhh/TMA/src/containers/Identity/Login/Login.jsx"],"names":["React","Component","FormInput","Formik","Form","Link","checkObject","style","Yup","success","error","Login","constructor","props","state","form","email","password","check","render","loginIdentity","loginLeft","title","btnSignUp","footer","log","loginRight","LoginForm","LoginFormik","object","string","required","min","matches","values","EmailValidator","test","setSubmitting","setState","data","btnLogin","color"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { Component } from \"react\";\nimport { FormInput } from \"../../../components/form/form\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { checkObject } from \"../../../utils/object\";\nimport \"antd/dist/antd.css\";\nimport style from \"./Login.module.scss\";\nimport log from \"../../img/log.svg\";\nimport * as Yup from \"yup\";\nimport { success, error } from \"../../../utils/messages\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      form: {\n        email: \"\",\n        password: \"\",\n      },\n      check: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className={style.loginIdentity}>\n        <div className={style.loginLeft}>\n          <div className={style.title}>\n            <h1>New Here ?</h1>\n            <h2>Sign out of Past.. Login to the new!</h2>\n            <div className={style.btnSignUp}>\n              <Link to=\"./register\">\n                <button>SIGN UP</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className={style.footer}>\n          <img src={log} alt=\"\" />\n        </div>\n        <div className={style.loginRight}>\n          <div className={style.LoginForm}>\n            <h1>SIGN IN</h1>\n            <div className={style.LoginFormik}>\n              <Formik\n                initialValues={this.state.form}\n                validationSchema={Yup.object({\n                  email: Yup.string().required(\"Required\"),\n                  password: Yup.string()\n                    .min(8, \"Minimum 8 characters\")\n                    .required(\"Required!\")\n                    .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n                })}\n                validate={(values) => {\n                  const EmailValidator =\n                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n                  let error = {};\n                  // if(values.email.length === 0) error.email = \"Required\";\n                  // if (checkObject(values, user) === false)\n                  //   error.email = \"The email doesn't exist\";\n                  if (!EmailValidator.test(values.email))\n                    error.email = \"Invalid email address.\";\n\n                  return error;\n                }}\n                onSubmit={async (values, { setSubmitting }) => {\n                  setSubmitting(true);\n\n                  this.setState({\n                    form: {\n                      email: \"\",\n                      password: \"\",\n                    },\n                    check: checkObject(values, this.props.data),\n                  });\n                  // console.log(this.validat e(values.error.email));\n                }}\n              >\n                {({ values }) => (\n                  <Form>\n                    <FormInput\n                      label=\"Email Address\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"TMA@formik.com\"\n                    />\n                    <FormInput\n                      label=\"Password\"\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Your Password\"\n                    />\n                    <div className={style.btnLogin}>\n                      <button\n                        type=\"submit\"\n                        onClick={\n                          this.state.check === true\n                            ? error\n                            : success(values.email)\n                        }\n                      >\n                        {checkObject(values, this.props.data) === true ? (\n                          <Link to=\"/category\" style={{ color: \"#fff\" }}>\n                            LOGIN\n                          </Link>\n                        ) : (\n                          <div> LOGIN</div>\n                        )}\n                      </button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}