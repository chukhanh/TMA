{"ast":null,"code":"var _jsxFileName = \"/Users/chukhanhhh/TMA/src/components/form/form.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { StyledSelect, StyledErrorMessage, StyledLabel } from './form.style.jsx';\nimport style from './form.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const formInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: style.textInput,\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.error,\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(formInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\nexport const formCheckBox = ({\n  children,\n  ...props\n}) => {\n  _s2();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [field, meta] = useField({ ...props,\n    type: \"checkbox\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.checkbox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...field,\n        ...props,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.error,\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s2(formCheckBox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\nexport const formSelect = ({\n  label,\n  ...props\n}) => {\n  _s3();\n\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelect, { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(StyledErrorMessage, {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s3(formSelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});","map":{"version":3,"sources":["/Users/chukhanhhh/TMA/src/components/form/form.jsx"],"names":["React","useField","StyledSelect","StyledErrorMessage","StyledLabel","style","formInput","label","props","field","meta","id","name","textInput","touched","error","formCheckBox","children","type","checkbox","formSelect"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,SAAQC,YAAR,EAAsBC,kBAAtB,EAA0CC,WAA1C,QAA4D,kBAA5D;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AACA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC9C;AACA,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAACO,KAAD,CAA9B;AACA,sBACI;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEA,KAAK,CAACG,EAAN,IAAYH,KAAK,CAACI,IAAlC;AAAA,gBAAyCL;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAEF,KAAK,CAACQ,SAAxB;AAAA,SAAuCJ,KAAvC;AAAA,SAAkDD;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGE,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAArB,gBACC;AAAK,MAAA,SAAS,EAAEV,KAAK,CAACU,KAAtB;AAAA,gBAA8BL,IAAI,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IALN;AAAA,kBADJ;AASH,CAZM;;GAAMT,S;UAEaL,Q;;;AAY1B,OAAO,MAAMe,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGT;AAAf,CAAD,KAA4B;AAAA;;AACpD;AACA,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAAC,EAAE,GAAGO,KAAL;AAAYU,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAA9B;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAEb,KAAK,CAACc,QAAxB;AAAA,8BACE,sBAAWV,KAAX;AAAA,WAAsBD,KAAtB;AAA6B,QAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGS,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGP,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAArB,gBACC;AAAK,MAAA,SAAS,EAAEV,KAAK,CAACU,KAAtB;AAAA,gBAA8BL,IAAI,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAPN;AAAA,kBADF;AAWD,CAdI;;IAAMC,Y;UAEaf,Q;;;AAc1B,OAAO,MAAMmB,UAAU,GAAG,CAAC;AAAEb,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC/C;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAACO,KAAD,CAA9B;AACA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEA,KAAK,CAACG,EAAN,IAAYH,KAAK,CAACI,IAAxC;AAAA,gBAA+CL;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD,OAAkBE,KAAlB;AAAA,SAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGE,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAArB,gBACC,QAAC,kBAAD;AAAA,gBAAqBL,IAAI,CAACK;AAA1B;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IALN;AAAA,kBADF;AASD,CAdI;;IAAMK,U;UAIanB,Q","sourcesContent":["import React from \"react\";\nimport {useField} from \"formik\";\nimport {StyledSelect, StyledErrorMessage, StyledLabel} from './form.style.jsx';\nimport style from './form.module.scss';\nexport const formInput = ({ label, ...props }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [field, meta] = useField(props);\n    return (\n        <>\n          <label htmlFor={props.id || props.name}>{label}</label>\n          <input className={style.textInput} {...field} {...props} />\n          {meta.touched && meta.error ? (\n            <div className={style.error}>{meta.error}</div>\n          ) : null}\n        </>\n      );\n}\n\nexport const formCheckBox = ({ children, ...props }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [field, meta] = useField({ ...props, type: \"checkbox\" });\n    return (\n      <>\n        <label className={style.checkbox}>\n          <input {...field} {...props} type=\"checkbox\" />\n          {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className={style.error}>{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n\nexport const formSelect = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n        <StyledSelect {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <StyledErrorMessage>{meta.error}</StyledErrorMessage>\n        ) : null}\n      </>\n    );\n  };\n\n"]},"metadata":{},"sourceType":"module"}