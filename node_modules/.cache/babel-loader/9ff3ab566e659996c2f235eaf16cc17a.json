{"ast":null,"code":"var _jsxFileName = \"/Users/chukhanhhh/TMA/src/containers/Identity/Login/Login.jsx\";\n\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { Component } from \"react\";\nimport { FormInput } from \"../../../components/form/form\";\nimport style from \"./Login.module.scss\";\nimport log from \"../../img/log.svg\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { apiAccount } from \"../../../services/URL/constURL\";\nimport { checkObject } from \"../../../utils/compareObject\";\nimport { message, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.success = () => {\n      message.success('This is a success message');\n    };\n\n    this.state = {\n      form: {\n        email: \"\",\n        password: \"\"\n      },\n      account: [],\n      check: false\n    };\n    this.success = this.success.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(apiAccount).then(res => {\n      const persons = res.data;\n      this.setState({\n        account: persons\n      });\n    });\n  }\n\n  render() {\n    const user = this.state.account;\n    console.log(user);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.loginIdentity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loginLeft,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.title,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Here ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign out of Past.. Login to the new!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.btnSignUp,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"./register\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"SIGN UP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.footer,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: log,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loginRight,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.LoginForm,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.LoginFormik,\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: this.state.form,\n              validationSchema: Yup.object({\n                email: Yup.string().required(\"Required\"),\n                password: Yup.string().min(8, \"Minimum 8 characters\").required(\"Required!\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n              }),\n              validate: values => {\n                const EmailValidator = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n                let error = {}; // if(values.email.length === 0) error.email = \"Required\";\n\n                if (checkObject(values, user) === false) error.email = \"The email doesn't exist\";\n                if (!EmailValidator.test(values.email)) error.email = \"Invalid email address.\";\n                return error;\n              },\n              onSubmit: async (values, {\n                setSubmitting\n              }) => {\n                await new Promise(r => setTimeout(r, 500));\n                setSubmitting(false);\n                console.warn(values); // console.log(values);\n\n                Promise(this.setState({\n                  check: checkObject(values, user)\n                })); // console.log(this.validat e(values.error.email));\n              },\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(FormInput, {\n                  label: \"Email Address\",\n                  name: \"email\",\n                  type: \"email\",\n                  placeholder: \"TMA@formik.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  label: \"Password\",\n                  name: \"password\",\n                  type: \"password\",\n                  placeholder: \"Your Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.btnLogin,\n                  children: this.state.check ? /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/category\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: success,\n                      type: \"submit\",\n                      children: \"LOGIN\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    children: \"LOGIN\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/chukhanhhh/TMA/src/containers/Identity/Login/Login.jsx"],"names":["React","Component","FormInput","style","Yup","Formik","Form","Link","axios","apiAccount","checkObject","message","Button","Login","constructor","props","success","state","form","email","password","account","check","bind","componentDidMount","get","then","res","persons","data","setState","render","user","console","log","loginIdentity","loginLeft","title","btnSignUp","footer","loginRight","LoginForm","LoginFormik","object","string","required","min","matches","values","EmailValidator","error","test","setSubmitting","Promise","r","setTimeout","warn","btnLogin"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { Component } from \"react\";\nimport { FormInput } from \"../../../components/form/form\";\nimport style from \"./Login.module.scss\";\nimport log from \"../../img/log.svg\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { apiAccount } from \"../../../services/URL/constURL\";\nimport { checkObject } from \"../../../utils/compareObject\";\nimport { message, Button } from \"antd\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      form: {\n        email: \"\",\n        password: \"\",\n      },\n      account: [],\n      check: false,\n    };\n    this.success = this.success.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(apiAccount).then((res) => {\n      const persons = res.data;\n      this.setState({ account: persons });\n    });\n  }\n  \n  success = () => {\n    message.success('This is a success message');\n  };\n\n  render() {\n    const user = this.state.account;\n    console.log(user);\n    return (\n      <div className={style.loginIdentity}>\n        <div className={style.loginLeft}>\n          <div className={style.title}>\n            <h1>New Here ?</h1>\n            <h2>Sign out of Past.. Login to the new!</h2>\n            <div className={style.btnSignUp}>\n              <Link to=\"./register\">\n                <button>SIGN UP</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className={style.footer}>\n          <img src={log} alt=\"\" />\n        </div>\n        <div className={style.loginRight}>\n          <div className={style.LoginForm}>\n            <h1>SIGN IN</h1>\n            <div className={style.LoginFormik}>\n              <Formik\n                initialValues={this.state.form}\n                validationSchema={Yup.object({\n                  email: Yup.string().required(\"Required\"),\n                  password: Yup.string()\n                    .min(8, \"Minimum 8 characters\")\n                    .required(\"Required!\")\n                    .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n                })}\n                validate={(values) => {\n                  const EmailValidator =\n                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n                  let error = {};\n                  // if(values.email.length === 0) error.email = \"Required\";\n                  if (checkObject(values, user) === false)\n                    error.email = \"The email doesn't exist\";\n                  if (!EmailValidator.test(values.email))\n                    error.email = \"Invalid email address.\";\n\n                  return error;\n                }}\n                onSubmit={async (values, { setSubmitting }) => {\n                  await new Promise((r) => setTimeout(r, 500));\n                  setSubmitting(false);\n                  console.warn(values);\n                  // console.log(values);\n                  Promise(this.setState({ check: checkObject(values, user) }));\n                  // console.log(this.validat e(values.error.email));\n                }}\n              >\n                <Form>\n                  <FormInput\n                    label=\"Email Address\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"TMA@formik.com\"\n                  />\n                  <FormInput\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Your Password\"\n                  />\n                  <div className={style.btnLogin}>\n                    {this.state.check ? (\n                      <Link to=\"/category\">\n                        <Button onClick={success} type=\"submit\">LOGIN</Button>\n                      </Link>\n                    ) : (\n                      <Button type=\"submit\">LOGIN</Button>\n                    )}\n                  </div>\n                </Form>\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}